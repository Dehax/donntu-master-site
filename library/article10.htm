<!DOCTYPE html>
<html lang="ru">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <meta http-equiv="X-UA-Compatible" content="IE=edge">
  <title>NoSQL at Netflix — Netflix Technology Blog</title>
  <!-- Bootstrap CSS -->
  <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.1.3/css/bootstrap.min.css" integrity="sha384-MCw98/SFnGE8fJT3GXwEOngsV7Zt27NXFoaoApmYm81iuXoPkFOJwJ8ERdknLPMO" crossorigin="anonymous">
  <link rel="stylesheet" type="text/css" href="../css/style.css">
</head>

<body>
  <div class="NavbarTopOffset"></div>

  <div class="container">
    <nav class="navbar navbar-expand-xl navbar-dark bg-primary fixed-top" id="menu">
      <a class="navbar-brand" href="/" target="_blank" title="Перейти на портал магистров ДонНТУ">Портал магистров</a>
      <button class="navbar-toggler" type="button" data-toggle="collapse" data-target="#navbarSupportedContent" aria-controls="navbarSupportedContent" aria-expanded="false" aria-label="Переключить меню">
        <span class="navbar-toggler-icon"></span>
      </button>
      <div class="collapse navbar-collapse" id="navbarSupportedContent">
        <ul class="navbar-nav mx-auto">
          <li class="nav-item">
            <a class="nav-link" href="../index.htm">Резюме</a>
          </li>
          <li class="nav-item">
            <a class="nav-link" href="../bio/index.htm">Биография</a>
          </li>
          <li class="nav-item">
            <a class="nav-link" href="../diss/index.htm">Реферат</a>
          </li>
          <li class="nav-item">
            <a class="nav-link active" href="../library/index.htm">Библиотека</a>
          </li>
          <li class="nav-item">
            <a class="nav-link" href="../links/index.htm">Ссылки</a>
          </li>
          <li class="nav-item">
            <a class="nav-link" href="../links/zvit.htm">Отчёт о поиске</a>
          </li>
          <li class="nav-item">
            <a class="nav-link" href="../ind/index.htm">Индивидуальный раздел</a>
          </li>
        </ul>
        <ul class="navbar-nav">
          <li class="nav-item">
            <a class="nav-link" href="http://donntu.org" target="_blank" title="Перейти на сайт ДонНТУ">ДонНТУ</a>
          </li>
        </ul>
      </div>
    </nav>

    <main class="card shadow my-4" id="middleblock">
      <div class="card-body">
        <div id="maintext">
          <h1 class="text-center">NoSQL в Netflix</h1>

          <p>
            <strong>Авторы:</strong> Netflix Technology Blog<br>
            <strong>Автор перевода:</strong> Д.В. Кубашевский<br>
            <strong>Источник (англ.):</strong> <a href="https://medium.com/netflix-techblog/nosql-at-netflix-e937b660b4c">NoSQL at Netflix — The Netflix Tech Blog — Medium</a>
          </p>

          <p>
            Это Юрий Израилевский, директор облачной и системной инфраструктуры здесь, в Netflix. Так как Netflix
            перешёл на облака, нам нужно было найти соответствующий механизм, чтобы хранить и запрашивать данные в нашей
            высокораспределённой инфраструктуре. Наша цель — создать быстрые, отказоустойчивые системы в масштабе
            Интернета. Мы поняли, что для того, чтобы достичь эту цель, нам нужно было выйти за пределы ограничений
            традиционной реляционной модели. В распределённом мире, под управлением
            <a href="https://ru.wikipedia.org/wiki/Теорема_CAP">теоремы CAP</a> Эрика Брюера, высокая доступность
            (т.е. лучший опыт работы с клиентами) обычно превосходит сильную согласованность. Есть мало возможностей
            для вертикальной масштабируемости или единственных точек отказа. И хотя это непросто, перепроектировать
            системы, чтобы не выполнять join-запросы или не полагаться на согласованность чтение-после-записи (эй,
            просто кэшируйте значение в вашем приложении!), мы преодолели новую границу распределённых
            <a href="https://ru.wikipedia.org/wiki/NoSQL">NoSQL</a> баз данных.
          </p>

          <p>
            Наша облачная инфраструктура имеет множество различных вариантов использования, требующих структурированного
            доступа к хранилищу. Netflix — это использование
            <a href="https://medium.com/netflix-techblog/why-we-use-and-contribute-to-open-source-software-1faa77c2e5c4">правильного инструмента для работы</a>.
            В этой статье я бы хотел затронуть причины нашего выбора из трёх таких NoSQL инструментов: SimpleDB,
            Hadoop/HBase и Cassandra.
          </p>

          <p>
            <a href="https://aws.amazon.com/ru/simpledb/">Amazon SimpleDB</a> был естественным выбором для ряда
            вариантов использования, когда мы перешли в облако AWS. SimpleDB — высокопрочное хранилище, с автоматической
            репликацией в зонах доступности в пределах региона. Оно также обладает некоторыми действительно удобными
            фунциями запроса и форматирования данных за пределами простого интерфейса ключ/значение такими, как
            несколько атрибутов на ключ строки, пакетные операции, последовательное чтение и т.д. Кроме того, SimpleDB —
            это хостинговое решение, администрируемое нашими друзьями в AWS. Нам нравится, когда другие делают
            недифференцированный тяжёлый подъём для нас; в конце концов, это была одна из причин, по которой мы перешли
            в облако в первую очередь. Если вы привыкли к другим продуктам и услугам AWS, использование SimpleDB это...
            ну, просто — одинаковый аккаунт AWS, знакомые интерфейсы, API, интегрированная поддержка, биллинг и т.д.
          </p>

          <p>
            Для наших систем, основанных на Hadoop, <a href="http://hbase.apache.org/">Apache HBase</a> — это удобное,
            высокопроизводительное колоночно-ориентированное решение для распределённой базы данных. С его моделью
            динамического разбиения, HBase упрощает рост кластера и перераспределяет нагрузку между узлами во время
            выполнения, что замечательно для управления нашими постоянно растущими потребностями в объёме данных и
            избегания горячих точек. Встроенная поддержка сжатия данных, диапазонные запросы, охватывающие несколько
            узлов, и даже нативная поддержка распределённых счётчиков делает его привлекательной альтернативой для
            многих наших вариантов использования. Модель сильной согласованности HBase может также быть удобной, хотя
            она поставляется с некоторыми доступными компромиссами. Возможно, самая большая польза заключается в
            возможности комбинировать запросы реального времени HBase с пакетными задачами map-reduce Hadoop, используя
            HDFS как платформу общего хранилища.
          </p>

          <p>
            Последнее, но тем не менее важное, я хотел бы поговорить о нашем использовании
            <a href="http://cassandra.apache.org/">Cassandra</a>. Распространяемая под лицензией Apache, Cassandra — это
            NoSQL база данных с открытым исходным кодом, гибкая, масштабируемая и производительная.
            <a href="https://www.datastax.com/">DataStax</a>, компания, которая профессионально поддерживает Cassandra,
            отлично помогли нам быстро изучить и управлять системой. В отличии от решения распределённой базы данных с
            использованием MySQL или даже SimpleDB, Cassandra (как HBase) может масштабироваться горизонтально и
            динамически, добавляя больше серверов, без необходимости перезапуска. На самом деле, Cassandra стремится
            избежать лимитов вертикального масштабирования и эффектов бутылочного горлышка любого вида: нет выделенных
            узлов имён (все кластерные узлы могут быть такими), нет практичесих архитектурных ограничений на размер
            данных, количество строк/столбцов и т.д. Производительность высокая, особенно для пропускной способности
            записи. Особого упоминания заслуживает чрезвычайно гибкая модель данных Cassandra. Редкая архитектура
            двумерного "суперколоночного семейства" позволяет представить обширные модели данных (и лучшую
            производительность) за пределами только простого поиска ключ-значение. И здесь нет основных требований к
            формату хранения, таких как HDFS; всё, что вам нужно это файловая система. Некоторые из самых
            заманчивых возможностей Cassandra это её уникально гибкая согласованность и модели репликации. Приложения
            могут определять на уровне вызовов, какой уровень согласованности использовать для чтения и записи
            (одиночный, кворум или все реплики). Это, в сочетании с настраиваемым коэффициентом репликации и специальной
            поддержкой определения, какие узлы кластера обозначить как реплики, делает её особенно хорошо подходящей для
            кросс-датацентровых и кросс-региональных развёртываний. В результате, один глобальный кластер Cassandra
            может одновременно обслуживать приложения и асинхронно реплицировать данные по нескольким географическим
            местоположениям.
          </p>

          <p>
            Причина, почему мы используем несколько NoSQL решений, заключается в том, что каждое из них лучше всего
            подходит для определённого набора вариантов использования. Например, HBase естественно интегрирована с
            платформой Hadoop, в то время как Cassandra лучше для кросс-регионального развёртывания и масштабирования
            без единых точек отказа. Принятие нереляционной модели в целом непросто, и Netflix платит крутой налог
            первопроходца, интегрируя эти быстро развивающиеся и всё ещё созревающие продукты NoSQL. Есть кривая
            обучения и операционные накладные расходы. Всё же преимущества масштабируемости, доступности и
            производительности модели NoSQL очевидны и уже окупаются и будут иметь решающее значение для нашей
            долгосрочной стратегии облачных вычислений.
          </p>

        </div>
      </div>
    </main>
  </div>

  <!-- Optional JavaScript -->
  <!-- jQuery first, then Popper.js, then Bootstrap JS -->
  <script src="https://code.jquery.com/jquery-3.3.1.slim.min.js" integrity="sha384-q8i/X+965DzO0rT7abK41JStQIAqVgRVzpbzo5smXKp4YfRvH+8abtTE1Pi6jizo" crossorigin="anonymous"></script>
  <script src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.14.3/umd/popper.min.js" integrity="sha384-ZMP7rVo3mIykV+2+9J3UJ46jBk0WLaUAdn689aCwoqbBJiSnjAK/l8WvCWPIPm49" crossorigin="anonymous"></script>
  <script src="https://stackpath.bootstrapcdn.com/bootstrap/4.1.3/js/bootstrap.min.js" integrity="sha384-ChfqqxuZUCnJSK3+MXmPNIyE6ZbWh2IMqE241rYiqJxyMiZ6OW/JmZQ5stwEULTy" crossorigin="anonymous"></script>
</body>
</html>
